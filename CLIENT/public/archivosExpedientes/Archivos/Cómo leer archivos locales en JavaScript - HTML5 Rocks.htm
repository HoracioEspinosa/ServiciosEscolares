<!DOCTYPE html>
<html dir="ltr" itemscope="" itemtype="http://schema.org/Article" style="" class=" js flexbox canvas canvastext webgl touch geolocation postmessage no-websqldatabase indexeddb hashchange history draganddrop websockets rgba no-hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients no-cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths adownload webaudio no-battery blobconstructor contenteditable cors csscalc cssfilters mediaqueries no-regions classlist datalistelem details texttrackapi track filereader no-filesystem fullscreen getusermedia gamepads xhr2 no-quotamanagement performance raf stylescoped websocketsbinary no-webintents no-webp todataurljpeg no-todataurlwebp" lang="es"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <meta property="twitter:account_id" content="1593210261">
  <!-- Copyright (c) 2012 Google Inc.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * Author: Eric Bidelman <e.bidelman@chromium.org>
   *
   * 
   *
  -->
  <title>Cómo leer archivos locales en JavaScript - HTML5 Rocks</title>
  <meta name="description" content="Guía de introducción para utilizar las API de archivos File, FileList y FileReader para procesar y leer archivos binarios en JavaScript">
  <meta name="keywords" content="html5,html 5,html5 demos,html5 examples,javascript,css3,notifications,geolocation,web workers,apppcache,file api,filereader,indexeddb,offline,audio,video,drag and drop,chrome,sse,mobile">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
  <meta name="theme-color" content="#f04530">
  <link rel="shortcut icon" href="https://www.html5rocks.com/favicon.ico">
  <link rel="alternate" type="application/rss+xml" title="Feed RSS de HTML5 Rocks" href="http://feeds.feedburner.com/html5rocks">
  <meta name="google-site-verification" content="E1HOIDkksrWY5npenL8FeQhKn4Ujctd75iO2lfufSyA">
  <meta itemprop="name" content="Cómo leer archivos en JavaScript a través de las API de archivos - HTML5 Rocks">
  <meta itemprop="description" content="Guía de introducción para utilizar las API de archivos File, FileList y FileReader para procesar y leer archivos binarios en JavaScript">
  
  <meta itemprop="image" content="https://www.html5rocks.com/static/images/html5rocks-logo-wings.png">
  

  
    
  <link rel="canonical" href="https://www.html5rocks.com/tutorials/file/dndfiles/">  
    
  

  
  <meta name="twitter:card" content="summary">
  <meta name="twitter:site" content="@ChromiumDev">
  <meta name="twitter:creator" content="@ebidel">

  <meta property="og:type" content="article">
  <meta property="og:title" content="Cómo leer archivos en JavaScript a través de las API de archivos - HTML5 Rocks">
  <meta property="og:url" content="https://www.html5rocks.com/es/tutorials/file/dndfiles/">
  <meta property="og:description" content="Guía de introducción para utilizar las API de archivos File, FileList y FileReader para procesar y leer archivos binarios en JavaScript">
  <meta property="og:image" content="https://www.html5rocks.com/static/images/profiles/ericbidelman.png">
  <meta property="og:site_name" content="HTML5 Rocks - Un recurso para desarrolladores de HTML5 para una Web abierta">
  

  
  <link rel="author" href="https://www.google.com/profiles/118075919496626375791">
  
  
  <link rel="publisher" href="https://plus.google.com/+GoogleChromeDevelopers">

  
  
  <link rel="alternate" hreflang="ru" href="https://www.html5rocks.com/ru/tutorials/file/dndfiles/">
  
  <link rel="alternate" hreflang="zh" href="https://www.html5rocks.com/zh/tutorials/file/dndfiles/">
  
  <link rel="alternate" hreflang="de" href="https://www.html5rocks.com/de/tutorials/file/dndfiles/">
  
  <link rel="alternate" hreflang="en" href="https://www.html5rocks.com/en/tutorials/file/dndfiles/">
  
  <link rel="alternate" hreflang="ja" href="https://www.html5rocks.com/ja/tutorials/file/dndfiles/">
  
  <link rel="alternate" hreflang="pt" href="https://www.html5rocks.com/pt/tutorials/file/dndfiles/">
  
  

  
    
    <link rel="stylesheet" media="all" href="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/v2-combined.css">
    

    
  

  <link href="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/css.css" rel="stylesheet">

  <link rel="apple-touch-icon" href="https://www.html5rocks.com/static/images/identity/HTML5_Badge_64.png">
  <link rel="apple-touch-icon-precomposed" href="https://www.html5rocks.com/static/images/identity/HTML5_Badge_64.png">

  <script type="text/javascript" src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/count.js" async=""></script><script type="text/javascript" async="" src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/analytics.js"></script><script async="" src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/gtm.js"></script><script async="" src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/analytics.js"></script><script async="" src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/gtm.js"></script><script src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/modernizr.js"></script>

  <!--[if lt IE 9]>
  <script src="http://html5shim.googlecode.com/svn/trunk/html5-els.js"></script>
  <![endif]-->

  
<style>
.example {
  padding: 10px;
  border: 1px solid #ccc;
}
#drop_zone {
  border: 2px dashed #bbb;
  -moz-border-radius: 5px;
  -webkit-border-radius: 5px;
  border-radius: 5px;
  padding: 25px;
  text-align: center;
  font: 20pt bold 'Vollkorn';
  color: #bbb;
}
.thumb {
  height: 75px;
  border: 1px solid #000;
  margin: 10px 5px 0 0;
}
#progress_bar {
  margin: 10px 0;
  padding: 3px;
  border: 1px solid #000;
  font-size: 14px;
  clear: both;
  opacity: 0;
  -o-transition: opacity 1s linear;
  -moz-transition: opacity 1s linear;
  -webkit-transition: opacity 1s linear;
}
#progress_bar.loading {
  opacity: 1.0;
}
#progress_bar .percent {
  background-color: #99ccff;
  height: auto;
  width: 0;
}
#byte_content {
  margin: 5px 0;
  max-height: 100px;
  overflow-y: auto;
  overflow-x: hidden;
}
#byte_range {
  margin-top: 5px;
}
</style>

<script src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/count-data.js"></script></head>
<body data-href="tutorials-file-dndfiles" onload="" class="article tutorial">

  <header class="main" id="siteheader">
    <h1 id="title">
      <a href="https://www.html5rocks.com/es/" title="HTML5 Rocks">HTML5 Rocks</a>
    </h1>
    <a href="#sitenav" id="navtoggle">Show navigation</a>

    
    <a id="toctoggle" href="#toc">Índice</a>
    

    <nav id="sitenav">
      <ul>
        
        <li id="home_menu"><a href="https://www.html5rocks.com/es/" class="home">Página de inicio</a></li>
        
        <li id="tutorials_menu"><a href="https://www.html5rocks.com/es/tutorials/?page=1" class="tutorials">Tutoriales</a></li>
        <li id="updates_menu"><a href="https://developers.google.com/web/updates/" class="updates">Actualizaciones</a></li>
      </ul>
    </nav>

    
    <nav class="toc" id="toc">
      <h1>Índice</h1>

      <ul><li><a href="#toc-introduction">Introducción</a></li><li><a href="#toc-selecting-files">Cómo seleccionar archivos</a></li><li><a href="#toc-reading-files">Cómo leer archivos</a></li><li><a href="#toc-references">Referencias</a></li></ul>

      <h1 class="visible-title">Traducciones:</h1>
      <ul>
        
          
          <li><a href="https://www.html5rocks.com/ru/tutorials/file/dndfiles/">Pусский</a></li>
          
          <li><a href="https://www.html5rocks.com/zh/tutorials/file/dndfiles/">中文 (简体)</a></li>
          
          <li><a href="https://www.html5rocks.com/de/tutorials/file/dndfiles/">Deutsch</a></li>
          
          <li><a href="https://www.html5rocks.com/en/tutorials/file/dndfiles/">English</a></li>
          
          <li><a href="https://www.html5rocks.com/ja/tutorials/file/dndfiles/">日本語</a></li>
          
          <li><a href="https://www.html5rocks.com/pt/tutorials/file/dndfiles/">Português (Brasil)</a></li>
          
          <li><a href="https://github.com/html5rocks/www.html5rocks.com/blob/master/CONTRIBUTING.md">Contribute another</a></li>
        
      </ul>
    </nav>
    
  </header>

  <div class="body-content">
    

  <section class="title">

    

    <section class="title-text container">
      
      <h1>Cómo leer archivos en JavaScript a través de las API de archivos</h1>
      
      

      <a href="https://www.html5rocks.com/es/" class="watermark">HTML5 Rocks</a>
    </section>
  </section>

  <article class="content-wrapper">

    <section class="container">

      

      <div class="article-meta sticky" id="article-meta" style="top: 22px;">
        <nav class="toc">
          <h1>Índice</h1>

          <ul><li><a href="#toc-introduction">Introducción</a></li><li><a href="#toc-selecting-files">Cómo seleccionar archivos</a></li><li><a href="#toc-reading-files">Cómo leer archivos</a></li><li><a href="#toc-references">Referencias</a></li></ul>
        </nav>

        <aside class="localizations">
          <h1>Traducciones</h1>
          <ul>
            
              
              <li><a href="https://www.html5rocks.com/ru/tutorials/file/dndfiles/">Pусский</a></li>
              
              <li><a href="https://www.html5rocks.com/zh/tutorials/file/dndfiles/">中文 (简体)</a></li>
              
              <li><a href="https://www.html5rocks.com/de/tutorials/file/dndfiles/">Deutsch</a></li>
              
              <li><a href="https://www.html5rocks.com/en/tutorials/file/dndfiles/">English</a></li>
              
              <li><a href="https://www.html5rocks.com/ja/tutorials/file/dndfiles/">日本語</a></li>
              
              <li><a href="https://www.html5rocks.com/pt/tutorials/file/dndfiles/">Português (Brasil)</a></li>
              
              <li><a href="https://github.com/html5rocks/www.html5rocks.com/blob/master/CONTRIBUTING.md">Contribute another</a></li>
            
          </ul>
        </aside>
      </div>
      

      <div class="content" id="article-content">

        <section class="byline">

          <div class="byline-content">
            
            <section class="author-images">
              <a href="https://www.html5rocks.com/profiles/#ericbidelman">
                <img src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/ericbidelman.png" itemprop="photo" alt="Eric Bidelman" title="Eric Bidelman">
              </a>

              
            </section>

            <section class="meta">
              <div class="authors">
                <strong>By</strong> <a href="https://www.html5rocks.com/profiles/#ericbidelman">Eric Bidelman</a>
                
              </div>

              

              <div class="date">
                <time pubdate=""><strong>Publicación:</strong> junio 18th, 2010</time>
                
                <span><strong>Comments:</strong> <a href="#disqus_thread" class="load-comments" data-disqus-identifier="https://www.html5rocks.com/tutorials/file/dndfiles/">12</a></span>
              </div>

              <div id="notcompatible" class="hidden">
                Your browser may not support the functionality in this article.
              </div>
            </section>
            <div class="clear"></div>

            
          </div>
        </section>

        
  <h2 id="toc-introduction">Introducción</h2>

  <p>Por fin, HTML5 ofrece una forma estándar de interactuar con archivos locales a través de la especificación del <a href="http://www.w3.org/TR/file-upload/">API de archivos</a>.
 El API de archivos se puede utilizar, por ejemplo, para crear una vista
 previa en miniatura de imágenes mientras se envían al servidor o para 
permitir que una aplicación guarde una referencia de un archivo mientras
 el usuario está sin conexión. También se podría utilizar lógica de 
cliente para verificar si el tipo MIME de un archivo subido coincide con
 la extensión del archivo o para restringir el tamaño de una subida.</p>
  <p>A continuación se indican las interfaces que ofrece la 
especificación para acceder a archivos desde un sistema de archivos 
"local".</p>
  <ol>
    <li><code>File:</code> representa un archivo individual que 
proporciona información de solo lectura (por ejemplo, el nombre, el 
tamaño del archivo, el tipo MIME y una referencia al control del 
archivo).</li>
    <li><code>FileList:</code> representa una secuencia de conjunto de objetos <code>File</code> (tanto la secuencia <code>&lt;input type="file" multiple&gt;</code> como arrastrar un directorio de archivos desde el escritorio se consideran ejemplos de esta interfaz).</li>
    <li><code>Blob:</code> permite fragmentar un archivo en intervalos de bytes.</li>
  </ol>
  <p>Cuando se utiliza junto con las estructuras de datos anteriores, la interfaz de <a href="http://dev.w3.org/2006/webapi/FileAPI/#filereader-interface"><code>FileReader</code></a>
 se puede utilizar para leer un archivo de forma asíncrona mediante el 
control de eventos de JavaScript. Por lo tanto, se puede controlar el 
progreso de una lectura, detectar si se han producido errores y 
determinar si ha finalizado una carga. El modelo de evento de <code>XMLHttpRequest</code> guarda muchas semejanzas con las API.</p>

  <p>Nota: en el momento de redactar este tutorial, las API necesarias 
para trabajar con archivos locales son compatibles con Chrome 6.0 y 
Firefox 3.6. A partir de Firefox 3.6.3, no se admite el método <code>File.slice()</code>.</p>

  <h2 id="toc-selecting-files">Cómo seleccionar archivos</h2>
  <p>En primer lugar, se debe comprobar que el navegador sea totalmente compatible con el API de archivos:</p>
  <pre class="prettyprint"><span class="com">// Check for the various File API support.</span><span class="pln">
</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">window</span><span class="pun">.</span><span class="typ">File</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> window</span><span class="pun">.</span><span class="typ">FileReader</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> window</span><span class="pun">.</span><span class="typ">FileList</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> window</span><span class="pun">.</span><span class="typ">Blob</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="com">// Great success! All the File APIs are supported.</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  alert</span><span class="pun">(</span><span class="str">'The File APIs are not fully supported in this browser.'</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span></pre>

  <p>Si tu aplicación solo va a utilizar algunas de estas API, modifica este fragmento en consecuencia.</p>

  <h3 id="toc-selecting-files-input">Uso de entradas de formulario para seleccionar archivos</h3>
  <p>La forma más sencilla de cargar un archivo es utilizar un elemento <code>&lt;input type="file"&gt;</code> estándar. JavaScript devuelve la lista de objetos <code>File</code> seleccionados como una secuencia <code>FileList</code>.
 A continuación, se muestra un ejemplo en el que se utiliza el atributo 
"multiple" para permitir la selección simultánea de varios archivos:</p>
  <pre class="prettyprint"><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"file"</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"files"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"files[]"</span><span class="pln"> </span><span class="atn">multiple</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln">
</span><span class="tag">&lt;output</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"list"</span><span class="tag">&gt;&lt;/output&gt;</span><span class="pln">

</span><span class="tag">&lt;script&gt;</span><span class="pln">
  </span><span class="kwd">function</span><span class="pln"> handleFileSelect</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> files </span><span class="pun">=</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">files</span><span class="pun">;</span><span class="pln"> </span><span class="com">// FileList object</span><span class="pln">

    </span><span class="com">// files is a FileList of File objects. List some properties.</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> output </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> f</span><span class="pun">;</span><span class="pln"> f </span><span class="pun">=</span><span class="pln"> files</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      output</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="str">'&lt;li&gt;&lt;strong&gt;'</span><span class="pun">,</span><span class="pln"> escape</span><span class="pun">(</span><span class="pln">f</span><span class="pun">.</span><span class="pln">name</span><span class="pun">),</span><span class="pln"> </span><span class="str">'&lt;/strong&gt; ('</span><span class="pun">,</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">type </span><span class="pun">||</span><span class="pln"> </span><span class="str">'n/a'</span><span class="pun">,</span><span class="pln"> </span><span class="str">') - '</span><span class="pun">,</span><span class="pln">
                  f</span><span class="pun">.</span><span class="pln">size</span><span class="pun">,</span><span class="pln"> </span><span class="str">' bytes, last modified: '</span><span class="pun">,</span><span class="pln">
                  f</span><span class="pun">.</span><span class="pln">lastModifiedDate</span><span class="pun">.</span><span class="pln">toLocaleDateString</span><span class="pun">(),</span><span class="pln"> </span><span class="str">'&lt;/li&gt;'</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'list'</span><span class="pun">).</span><span class="pln">innerHTML </span><span class="pun">=</span><span class="pln"> </span><span class="str">'&lt;ul&gt;'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> output</span><span class="pun">.</span><span class="pln">join</span><span class="pun">(</span><span class="str">''</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">'&lt;/ul&gt;'</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'files'</span><span class="pun">).</span><span class="pln">addEventListener</span><span class="pun">(</span><span class="str">'change'</span><span class="pun">,</span><span class="pln"> handleFileSelect</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln">
</span><span class="tag">&lt;/script&gt;</span></pre>

  <p><strong>Ejemplo:</strong> uso de entradas de formulario para seleccionar archivos. ¡Haz una prueba!</p>
  <div class="example">
    <input id="files1" name="files1[]" multiple="" type="file">
    <output id="file_list"></output>
  </div>

  <h3 id="toc-selecting-files-dnd">Uso de la acción de arrastrar y soltar para seleccionar archivos</h3>
  <p>Otra técnica de carga de archivos consiste en arrastrar archivos 
nativos desde el escritorio y soltarlos en el navegador. Podemos 
modificar ligeramente el ejemplo anterior para incluir esta técnica.</p>
  <pre class="prettyprint"><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"drop_zone"</span><span class="tag">&gt;</span><span class="pln">Drop files here</span><span class="tag">&lt;/div&gt;</span><span class="pln">
</span><span class="tag">&lt;output</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"list"</span><span class="tag">&gt;&lt;/output&gt;</span><span class="pln">

</span><span class="tag">&lt;script&gt;</span><span class="pln">
  </span><span class="kwd">function</span><span class="pln"> handleFileSelect</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    evt</span><span class="pun">.</span><span class="pln">stopPropagation</span><span class="pun">();</span><span class="pln">
    evt</span><span class="pun">.</span><span class="pln">preventDefault</span><span class="pun">();</span><span class="pln">

    </span><span class="kwd">var</span><span class="pln"> files </span><span class="pun">=</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">dataTransfer</span><span class="pun">.</span><span class="pln">files</span><span class="pun">;</span><span class="pln"> </span><span class="com">// FileList object.</span><span class="pln">

    </span><span class="com">// files is a FileList of File objects. List some properties.</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> output </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> f</span><span class="pun">;</span><span class="pln"> f </span><span class="pun">=</span><span class="pln"> files</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      output</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="str">'&lt;li&gt;&lt;strong&gt;'</span><span class="pun">,</span><span class="pln"> escape</span><span class="pun">(</span><span class="pln">f</span><span class="pun">.</span><span class="pln">name</span><span class="pun">),</span><span class="pln"> </span><span class="str">'&lt;/strong&gt; ('</span><span class="pun">,</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">type </span><span class="pun">||</span><span class="pln"> </span><span class="str">'n/a'</span><span class="pun">,</span><span class="pln"> </span><span class="str">') - '</span><span class="pun">,</span><span class="pln">
                  f</span><span class="pun">.</span><span class="pln">size</span><span class="pun">,</span><span class="pln"> </span><span class="str">' bytes, last modified: '</span><span class="pun">,</span><span class="pln">
                  f</span><span class="pun">.</span><span class="pln">lastModifiedDate</span><span class="pun">.</span><span class="pln">toLocaleDateString</span><span class="pun">(),</span><span class="pln"> </span><span class="str">'&lt;/li&gt;'</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'list'</span><span class="pun">).</span><span class="pln">innerHTML </span><span class="pun">=</span><span class="pln"> </span><span class="str">'&lt;ul&gt;'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> output</span><span class="pun">.</span><span class="pln">join</span><span class="pun">(</span><span class="str">''</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">'&lt;/ul&gt;'</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">function</span><span class="pln"> handleDragOver</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    evt</span><span class="pun">.</span><span class="pln">stopPropagation</span><span class="pun">();</span><span class="pln">
    evt</span><span class="pun">.</span><span class="pln">preventDefault</span><span class="pun">();</span><span class="pln">
    evt</span><span class="pun">.</span><span class="pln">dataTransfer</span><span class="pun">.</span><span class="pln">dropEffect </span><span class="pun">=</span><span class="pln"> </span><span class="str">'copy'</span><span class="pun">;</span><span class="pln"> </span><span class="com">// Explicitly show this is a copy.</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="com">// Setup the dnd listeners.</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> dropZone </span><span class="pun">=</span><span class="pln"> document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'drop_zone'</span><span class="pun">);</span><span class="pln">
  dropZone</span><span class="pun">.</span><span class="pln">addEventListener</span><span class="pun">(</span><span class="str">'dragover'</span><span class="pun">,</span><span class="pln"> handleDragOver</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln">
  dropZone</span><span class="pun">.</span><span class="pln">addEventListener</span><span class="pun">(</span><span class="str">'drop'</span><span class="pun">,</span><span class="pln"> handleFileSelect</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln">
</span><span class="tag">&lt;/script&gt;</span></pre>

  <p><strong>Ejemplo:</strong> uso de la acción de arrastrar y soltar para seleccionar archivos. ¡Haz una prueba!</p>
  <div class="example">
    <div id="drop_zone">Suelta los archivos aquí.</div>
    <output id="file_list2"></output>
  </div>

  <p>Nota: algunos navegadores tratan los elementos <code>&lt;input type="file"&gt;</code>
 como destinos donde soltar archivos nativos. Intenta arrastrar los 
archivos al campo de introducción de contenido del ejemplo anterior.</p>

  <h2 id="toc-reading-files">Cómo leer archivos</h2>
  <p>Ahora viene la parte divertida.</p>
  <p>Después de obtener una referencia de <code>File</code>, crea instancias de un objeto <a href="http://dev.w3.org/2006/webapi/FileAPI/#filereader-interface"><code>FileReader</code></a> para leer su contenido en memoria. Cuando finaliza la carga, se activa el evento <code>onload</code> del lector y se puede utilizar su atributo <code>result</code> para acceder a los datos del archivo.</p>
  <p>A continuación se indican las cuatro opciones de lectura asíncrona de archivo que incluye <code>FileReader</code>.</p>
  <ul>
    <li><code>FileReader.readAsBinaryString(Blob|File)</code>: la propiedad <code>result</code>
 contendrá los datos del archivo/objeto BLOB en forma de cadena binaria.
 Cada byte se representa con un número entero comprendido entre 0 y 
0,255, ambos incluidos.</li>
    <li><code>FileReader.readAsText(Blob|File, opt_encoding)</code>: la propiedad <code>result</code>
 contendrá los datos del archivo/objeto BLOB en forma de cadena de 
texto. De forma predeterminada, la cadena se decodifica con el formato 
"UTF-8". Utiliza el parámetro de codificación opcional para especificar 
un formato diferente.</li>
    <li><code>FileReader.readAsDataURL(Blob|File):</code> la propiedad <code>result</code> contendrá los datos del archivo/objeto BLOB codificados como una <a href="http://en.wikipedia.org/wiki/Data_URI_scheme">URL de datos</a>.</li>
    <li><code>FileReader.readAsArrayBuffer(Blob|File):</code> la propiedad <code>result</code> contendrá los datos del archivo/objeto BLOB como un objeto <a href="https://www.khronos.org/registry/typedarray/specs/latest/#5">ArrayBuffer</a>.</li>
  </ul>

  <p>Una vez que se ha activado uno de estos métodos de lectura en el objeto <code>FileReader</code>, se pueden utilizar los eventos <code>onloadstart</code>, <code>onprogress</code>, <code>onload</code>, <code>onabort</code>, <code>onerror</code> y <code>onloadend</code> para realizar un seguimiento de su progreso.</p>
  
  <p>En el ejemplo que se muestra a continuación, se excluyen las imágenes de los elementos seleccionados por el usuario, se activa <code>reader.readAsDataURL()</code> en el archivo y se muestra una miniatura estableciendo una URL de datos como valor del atributo "src".</p>
  <pre class="prettyprint"><span class="tag">&lt;style&gt;</span><span class="pln">
  </span><span class="pun">.</span><span class="pln">thumb </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">height</span><span class="pun">:</span><span class="pln"> </span><span class="lit">75px</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid </span><span class="lit">#000</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">margin</span><span class="pun">:</span><span class="pln"> </span><span class="lit">10px</span><span class="pln"> </span><span class="lit">5px</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="tag">&lt;/style&gt;</span><span class="pln">

</span><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"file"</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"files"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"files[]"</span><span class="pln"> </span><span class="atn">multiple</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln">
</span><span class="tag">&lt;output</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"list"</span><span class="tag">&gt;&lt;/output&gt;</span><span class="pln">

</span><span class="tag">&lt;script&gt;</span><span class="pln">
  </span><span class="kwd">function</span><span class="pln"> handleFileSelect</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> files </span><span class="pun">=</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">files</span><span class="pun">;</span><span class="pln"> </span><span class="com">// FileList object</span><span class="pln">

    </span><span class="com">// Loop through the FileList and render image files as thumbnails.</span><span class="pln">
    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> f</span><span class="pun">;</span><span class="pln"> f </span><span class="pun">=</span><span class="pln"> files</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

      </span><span class="com">// Only process image files.</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">f</span><span class="pun">.</span><span class="pln">type</span><span class="pun">.</span><span class="pln">match</span><span class="pun">(</span><span class="str">'image.*'</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">continue</span><span class="pun">;</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">

      </span><span class="kwd">var</span><span class="pln"> reader </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileReader</span><span class="pun">();</span><span class="pln">

      </span><span class="com">// Closure to capture the file information.</span><span class="pln">
      reader</span><span class="pun">.</span><span class="pln">onload </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">theFile</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          </span><span class="com">// Render thumbnail.</span><span class="pln">
          </span><span class="kwd">var</span><span class="pln"> span </span><span class="pun">=</span><span class="pln"> document</span><span class="pun">.</span><span class="pln">createElement</span><span class="pun">(</span><span class="str">'span'</span><span class="pun">);</span><span class="pln">
          span</span><span class="pun">.</span><span class="pln">innerHTML </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="str">'&lt;img class="thumb" src="'</span><span class="pun">,</span><span class="pln"> e</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">result</span><span class="pun">,</span><span class="pln">
                            </span><span class="str">'" title="'</span><span class="pun">,</span><span class="pln"> escape</span><span class="pun">(</span><span class="pln">theFile</span><span class="pun">.</span><span class="pln">name</span><span class="pun">),</span><span class="pln"> </span><span class="str">'"/&gt;'</span><span class="pun">].</span><span class="pln">join</span><span class="pun">(</span><span class="str">''</span><span class="pun">);</span><span class="pln">
          document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'list'</span><span class="pun">).</span><span class="pln">insertBefore</span><span class="pun">(</span><span class="pln">span</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">);</span><span class="pln">
        </span><span class="pun">};</span><span class="pln">
      </span><span class="pun">})(</span><span class="pln">f</span><span class="pun">);</span><span class="pln">

      </span><span class="com">// Read in the image file as a data URL.</span><span class="pln">
      reader</span><span class="pun">.</span><span class="pln">readAsDataURL</span><span class="pun">(</span><span class="pln">f</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'files'</span><span class="pun">).</span><span class="pln">addEventListener</span><span class="pun">(</span><span class="str">'change'</span><span class="pun">,</span><span class="pln"> handleFileSelect</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln">
</span><span class="tag">&lt;/script&gt;</span></pre>

  <p><strong>Ejemplo:</strong> lectura de archivos. ¡Haz una prueba!</p>
  <div class="example">
    <p>Intenta realizar este ejemplo con un directorio de imágenes.</p>
    <input id="files3" name="files3[]" multiple="" type="file"><br>
    <output id="thumbnails"></output>
  </div>

  <h3 id="toc-slicing-files">Fragmentación de archivos</h3>

  <p>En algunos casos, leer el archivo completo en la memoria no es la 
mejor opción. Supongamos, por ejemplo, que quieres crear una herramienta
 de subida de archivos asíncrona. Para acelerar la subida, se podría 
leer y enviar el archivo en diferentes fragmentos de intervalos de 
bytes. El componente del servidor se encargaría de reconstruir el 
contenido del archivo en el orden correcto.</p>
  <p>Afortunadamente, la interfaz <code>File</code> es compatible con un
 método de fragmentación. El método utiliza un byte de inicio como 
primer argumento, un byte de finalización como segundo argumento y una 
cadena de introducción de contenido de opción como tercer argumento. La 
semántica de este método ha cambiado recientemente, así que en este 
fragmento se incluyen prefijos del proveedor:</p>

  <pre class="prettyprint"><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">file</span><span class="pun">.</span><span class="pln">webkitSlice</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> blob </span><span class="pun">=</span><span class="pln"> file</span><span class="pun">.</span><span class="pln">webkitSlice</span><span class="pun">(</span><var><span class="pln">startingByte</span></var><span class="pun">,</span><span class="pln"> </span><var><span class="pln">endindByte</span></var><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">file</span><span class="pun">.</span><span class="pln">mozSlice</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> blob </span><span class="pun">=</span><span class="pln"> file</span><span class="pun">.</span><span class="pln">mozSlice</span><span class="pun">(</span><var><span class="pln">startingByte</span></var><span class="pun">,</span><span class="pln"> </span><var><span class="pln">endindByte</span></var><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
reader</span><span class="pun">.</span><span class="pln">readAsBinaryString</span><span class="pun">(</span><span class="pln">blob</span><span class="pun">);</span></pre>

  <p>En el ejemplo que aparece a continuación se muestran fragmentos de 
lectura de un archivo. Ten en cuenta que este método utiliza el evento <code>onloadend</code> y comprueba <code>evt.target.readyState</code>, en lugar de utilizar el evento <code>onload</code>.</p>

<pre class="prettyprint"><span class="tag">&lt;style&gt;</span><span class="pln">
  </span><span class="pun">#</span><span class="pln">byte_content </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">margin</span><span class="pun">:</span><span class="pln"> </span><span class="lit">5px</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">max-height</span><span class="pun">:</span><span class="pln"> </span><span class="lit">100px</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">overflow-y</span><span class="pun">:</span><span class="pln"> auto</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">overflow-x</span><span class="pun">:</span><span class="pln"> hidden</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">#</span><span class="pln">byte_range </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">margin-top</span><span class="pun">:</span><span class="pln"> </span><span class="lit">5px</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="tag">&lt;/style&gt;</span><span class="pln">

</span><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"file"</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"files"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"file"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"> Read bytes: 
</span><span class="tag">&lt;span</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"readBytesButtons"</span><span class="tag">&gt;</span><span class="pln">
  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">data-startbyte</span><span class="pun">=</span><span class="atv">"0"</span><span class="pln"> </span><span class="atn">data-endbyte</span><span class="pun">=</span><span class="atv">"4"</span><span class="tag">&gt;</span><span class="pln">1-5</span><span class="tag">&lt;/button&gt;</span><span class="pln">
  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">data-startbyte</span><span class="pun">=</span><span class="atv">"5"</span><span class="pln"> </span><span class="atn">data-endbyte</span><span class="pun">=</span><span class="atv">"14"</span><span class="tag">&gt;</span><span class="pln">6-15</span><span class="tag">&lt;/button&gt;</span><span class="pln">
  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">data-startbyte</span><span class="pun">=</span><span class="atv">"6"</span><span class="pln"> </span><span class="atn">data-endbyte</span><span class="pun">=</span><span class="atv">"7"</span><span class="tag">&gt;</span><span class="pln">7-8</span><span class="tag">&lt;/button&gt;</span><span class="pln">
  </span><span class="tag">&lt;button&gt;</span><span class="pln">entire file</span><span class="tag">&lt;/button&gt;</span><span class="pln">
</span><span class="tag">&lt;/span&gt;</span><span class="pln">
</span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"byte_range"</span><span class="tag">&gt;&lt;/div&gt;</span><span class="pln">
</span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"byte_content"</span><span class="tag">&gt;&lt;/div&gt;</span><span class="pln">

</span><span class="tag">&lt;script&gt;</span><span class="pln">
  </span><span class="kwd">function</span><span class="pln"> readBlob</span><span class="pun">(</span><span class="pln">opt_startByte</span><span class="pun">,</span><span class="pln"> opt_stopByte</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

    </span><span class="kwd">var</span><span class="pln"> files </span><span class="pun">=</span><span class="pln"> document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'files'</span><span class="pun">).</span><span class="pln">files</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">files</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      alert</span><span class="pun">(</span><span class="str">'Please select a file!'</span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">return</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="kwd">var</span><span class="pln"> file </span><span class="pun">=</span><span class="pln"> files</span><span class="pun">[</span><span class="lit">0</span><span class="pun">];</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> start </span><span class="pun">=</span><span class="pln"> parseInt</span><span class="pun">(</span><span class="pln">opt_startByte</span><span class="pun">)</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">var</span><span class="pln"> stop </span><span class="pun">=</span><span class="pln"> parseInt</span><span class="pun">(</span><span class="pln">opt_stopByte</span><span class="pun">)</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> file</span><span class="pun">.</span><span class="pln">size </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln">

    </span><span class="kwd">var</span><span class="pln"> reader </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileReader</span><span class="pun">();</span><span class="pln">

    </span><span class="com">// If we use onloadend, we need to check the readyState.</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">onloadend </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">readyState </span><span class="pun">==</span><span class="pln"> </span><span class="typ">FileReader</span><span class="pun">.</span><span class="pln">DONE</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// DONE == 2</span><span class="pln">
        document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'byte_content'</span><span class="pun">).</span><span class="pln">textContent </span><span class="pun">=</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">result</span><span class="pun">;</span><span class="pln">
        document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'byte_range'</span><span class="pun">).</span><span class="pln">textContent </span><span class="pun">=</span><span class="pln"> 
            </span><span class="pun">[</span><span class="str">'Read bytes: '</span><span class="pun">,</span><span class="pln"> start </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="str">' - '</span><span class="pun">,</span><span class="pln"> stop </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
             </span><span class="str">' of '</span><span class="pun">,</span><span class="pln"> file</span><span class="pun">.</span><span class="pln">size</span><span class="pun">,</span><span class="pln"> </span><span class="str">' byte file'</span><span class="pun">].</span><span class="pln">join</span><span class="pun">(</span><span class="str">''</span><span class="pun">);</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">};</span><span class="pln">

    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">file</span><span class="pun">.</span><span class="pln">webkitSlice</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">var</span><span class="pln"> blob </span><span class="pun">=</span><span class="pln"> file</span><span class="pun">.</span><span class="pln">webkitSlice</span><span class="pun">(</span><span class="pln">start</span><span class="pun">,</span><span class="pln"> stop </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">file</span><span class="pun">.</span><span class="pln">mozSlice</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">var</span><span class="pln"> blob </span><span class="pun">=</span><span class="pln"> file</span><span class="pun">.</span><span class="pln">mozSlice</span><span class="pun">(</span><span class="pln">start</span><span class="pun">,</span><span class="pln"> stop </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">readAsBinaryString</span><span class="pun">(</span><span class="pln">blob</span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  
  document</span><span class="pun">.</span><span class="pln">querySelector</span><span class="pun">(</span><span class="str">'.readBytesButtons'</span><span class="pun">).</span><span class="pln">addEventListener</span><span class="pun">(</span><span class="str">'click'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">tagName</span><span class="pun">.</span><span class="pln">toLowerCase</span><span class="pun">()</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="str">'button'</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">var</span><span class="pln"> startByte </span><span class="pun">=</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">getAttribute</span><span class="pun">(</span><span class="str">'data-startbyte'</span><span class="pun">);</span><span class="pln">
      </span><span class="kwd">var</span><span class="pln"> endByte </span><span class="pun">=</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">getAttribute</span><span class="pun">(</span><span class="str">'data-endbyte'</span><span class="pun">);</span><span class="pln">
      readBlob</span><span class="pun">(</span><span class="pln">startByte</span><span class="pun">,</span><span class="pln"> endByte</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">},</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln">
</span><span class="tag">&lt;/script&gt;</span></pre>

  <p><strong>Ejemplo</strong>: fragmentación de archivo. ¡Haz una prueba!</p>
  <div class="example">
    <input id="file4" name="file4" type="file"> Bytes de lectura: <span class="readBytesButtons">
      <button data-startbyte="0" data-endbyte="4">1-5</button>
      <button data-startbyte="5" data-endbyte="14">6-15</button>
      <button data-startbyte="6" data-endbyte="7">7-8</button>
      <button>archivo completo</button>
    </span>
    <div id="byte_range"></div>
    <div id="byte_content"></div>
  </div>

  <h3 id="toc-monitoring-progress">Control del progreso de una lectura</h3>

  <p>Una de las funciones que se pueden disfrutar gratuitamente al 
utilizar el control de eventos de tipo asíncrono es la de control del 
progreso de la lectura de un archivo. Esto resulta útil para leer 
archivos de gran tamaño, detectar errores y saber cuándo se ha 
completado una lectura.</p>

  <p>Los eventos <code>onloadstart</code> y <code>onprogress</code> se pueden utilizar para controlar el progreso de una lectura.</p>

  <p>En el ejemplo que aparece a continuación, se muestra una barra de 
progreso que permite controlar el estado de la lectura. Para ver cómo 
funciona el indicador de progreso, intenta utilizar un archivo grande o 
un archivo de una unidad remota.</p>

<pre class="prettyprint"><span class="tag">&lt;style&gt;</span><span class="pln">
  </span><span class="pun">#</span><span class="pln">progress_bar </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">margin</span><span class="pun">:</span><span class="pln"> </span><span class="lit">10px</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">padding</span><span class="pun">:</span><span class="pln"> </span><span class="lit">3px</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid </span><span class="lit">#000</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">font-size</span><span class="pun">:</span><span class="pln"> </span><span class="lit">14px</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">clear</span><span class="pun">:</span><span class="pln"> both</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">-moz-transition</span><span class="pun">:</span><span class="pln"> opacity </span><span class="lit">1s</span><span class="pln"> linear</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">-o-transition</span><span class="pun">:</span><span class="pln"> opacity </span><span class="lit">1s</span><span class="pln"> linear</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">-webkit-transition</span><span class="pun">:</span><span class="pln"> opacity </span><span class="lit">1s</span><span class="pln"> linear</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">#</span><span class="pln">progress_bar</span><span class="pun">.</span><span class="pln">loading </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">#</span><span class="pln">progress_bar </span><span class="pun">.</span><span class="pln">percent </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">background-color</span><span class="pun">:</span><span class="pln"> </span><span class="lit">#99ccff</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">height</span><span class="pun">:</span><span class="pln"> auto</span><span class="pun">;</span><span class="pln">
    </span><span class="kwd">width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="tag">&lt;/style&gt;</span><span class="pln">

</span><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"file"</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"files"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"file"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln">
</span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">onclick</span><span class="pun">=</span><span class="atv">"</span><span class="pln">abortRead</span><span class="pun">();</span><span class="atv">"</span><span class="tag">&gt;</span><span class="pln">Cancel read</span><span class="tag">&lt;/button&gt;</span><span class="pln">
</span><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"progress_bar"</span><span class="tag">&gt;&lt;div</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"percent"</span><span class="tag">&gt;</span><span class="pln">0%</span><span class="tag">&lt;/div&gt;&lt;/div&gt;</span><span class="pln">

</span><span class="tag">&lt;script&gt;</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> reader</span><span class="pun">;</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> progress </span><span class="pun">=</span><span class="pln"> document</span><span class="pun">.</span><span class="pln">querySelector</span><span class="pun">(</span><span class="str">'.percent'</span><span class="pun">);</span><span class="pln">

  </span><span class="kwd">function</span><span class="pln"> abortRead</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">abort</span><span class="pun">();</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">function</span><span class="pln"> errorHandler</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">switch</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">error</span><span class="pun">.</span><span class="pln">code</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">case</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">error</span><span class="pun">.</span><span class="pln">NOT_FOUND_ERR</span><span class="pun">:</span><span class="pln">
        alert</span><span class="pun">(</span><span class="str">'File Not Found!'</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">case</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">error</span><span class="pun">.</span><span class="pln">NOT_READABLE_ERR</span><span class="pun">:</span><span class="pln">
        alert</span><span class="pun">(</span><span class="str">'File is not readable'</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">break</span><span class="pun">;</span><span class="pln">
      </span><span class="kwd">case</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">error</span><span class="pun">.</span><span class="pln">ABORT_ERR</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">break</span><span class="pun">;</span><span class="pln"> </span><span class="com">// noop</span><span class="pln">
      </span><span class="kwd">default</span><span class="pun">:</span><span class="pln">
        alert</span><span class="pun">(</span><span class="str">'An error occurred reading this file.'</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">};</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">function</span><span class="pln"> updateProgress</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// evt is an ProgressEvent.</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">evt</span><span class="pun">.</span><span class="pln">lengthComputable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">var</span><span class="pln"> percentLoaded </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Math</span><span class="pun">.</span><span class="pln">round</span><span class="pun">((</span><span class="pln">evt</span><span class="pun">.</span><span class="pln">loaded </span><span class="pun">/</span><span class="pln"> evt</span><span class="pun">.</span><span class="pln">total</span><span class="pun">)</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="lit">100</span><span class="pun">);</span><span class="pln">
      </span><span class="com">// Increase the progress bar length.</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">percentLoaded </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">100</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        progress</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">width </span><span class="pun">=</span><span class="pln"> percentLoaded </span><span class="pun">+</span><span class="pln"> </span><span class="str">'%'</span><span class="pun">;</span><span class="pln">
        progress</span><span class="pun">.</span><span class="pln">textContent </span><span class="pun">=</span><span class="pln"> percentLoaded </span><span class="pun">+</span><span class="pln"> </span><span class="str">'%'</span><span class="pun">;</span><span class="pln">
      </span><span class="pun">}</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">function</span><span class="pln"> handleFileSelect</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// Reset progress indicator on new file selection.</span><span class="pln">
    progress</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">width </span><span class="pun">=</span><span class="pln"> </span><span class="str">'0%'</span><span class="pun">;</span><span class="pln">
    progress</span><span class="pun">.</span><span class="pln">textContent </span><span class="pun">=</span><span class="pln"> </span><span class="str">'0%'</span><span class="pun">;</span><span class="pln">

    reader </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">FileReader</span><span class="pun">();</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">onerror </span><span class="pun">=</span><span class="pln"> errorHandler</span><span class="pun">;</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">onprogress </span><span class="pun">=</span><span class="pln"> updateProgress</span><span class="pun">;</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">onabort </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      alert</span><span class="pun">(</span><span class="str">'File read cancelled'</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">};</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">onloadstart </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'progress_bar'</span><span class="pun">).</span><span class="pln">className </span><span class="pun">=</span><span class="pln"> </span><span class="str">'loading'</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">};</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">onload </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// Ensure that the progress bar displays 100% at the end.</span><span class="pln">
      progress</span><span class="pun">.</span><span class="pln">style</span><span class="pun">.</span><span class="pln">width </span><span class="pun">=</span><span class="pln"> </span><span class="str">'100%'</span><span class="pun">;</span><span class="pln">
      progress</span><span class="pun">.</span><span class="pln">textContent </span><span class="pun">=</span><span class="pln"> </span><span class="str">'100%'</span><span class="pun">;</span><span class="pln">
      setTimeout</span><span class="pun">(</span><span class="str">"document.getElementById('progress_bar').className='';"</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2000</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">

    </span><span class="com">// Read in the image file as a binary string.</span><span class="pln">
    reader</span><span class="pun">.</span><span class="pln">readAsBinaryString</span><span class="pun">(</span><span class="pln">evt</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">files</span><span class="pun">[</span><span class="lit">0</span><span class="pun">]);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  document</span><span class="pun">.</span><span class="pln">getElementById</span><span class="pun">(</span><span class="str">'files'</span><span class="pun">).</span><span class="pln">addEventListener</span><span class="pun">(</span><span class="str">'change'</span><span class="pun">,</span><span class="pln"> handleFileSelect</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln">
</span><span class="tag">&lt;/script&gt;</span></pre>

  <p><strong>Ejemplo:</strong> control del progreso de una lectura. ¡Haz una prueba!</p>
  <div class="example">
    <input id="file5" name="file5" type="file">
    <button onclick="example5.abortRead();">Cancelar lectura</button>
    <div id="progress_bar"><div class="percent">0%</div></div>
    <p><strong>Sugerencia</strong>: para ver cómo funciona este indicador de progreso, intenta utilizar un archivo grande o un recurso de una unidad remota.</p>
  </div>

  <h2 id="toc-references">Referencias</h2>
  <ul>
    <li>Especificación del API de <a href="http://www.w3.org/TR/file-upload/">archivos</a></li>
    <li>Especificación de la interfaz <a href="http://www.w3.org/TR/file-upload/#dfn-filereader">FileReader</a></li>
    <li>Especificación de la interfaz <a href="http://www.w3.org/TR/file-upload/#dfn-Blob">Blob</a></li>
    <li>Especificación de la interfaz <a href="http://www.w3.org/TR/file-upload/#dfn-fileerror">FileError</a></li>
    <li>Especificación de <a href="http://www.w3.org/TR/progress-events/#Progress">ProgressEvent</a></li>
  </ul>

<script>
var get = function(id) { return document.getElementById(id); }

var example1 = example1 || {};
example1.handleFileSelect = function(evt) {
  var files = evt.target.files;
  var output = [];
  for (var i = 0, f; f = files[i]; i++) {
    output.push('<li><strong>', escape(f.name), '</strong> (', f.type || 'n/a', ') - ',
                f.size, ' bytes, last modified: ',
                f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                '</li>');
  }
  get('file_list').innerHTML = '<ul>' + output.join('') + '</ul>';
}
get('files1').addEventListener('change', example1.handleFileSelect, false);

var example2 = example2 || {};
example2.onDragOver = function(evt) {
  evt.stopPropagation();
  evt.preventDefault();
  evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.
}

example2.onDragFileDrop = function(evt) {
  evt.stopPropagation();
  evt.preventDefault();

  var files = evt.dataTransfer.files;
  var output = [];
  for (var i = 0, f; f = files[i]; i++) {
    output.push('<li><strong>', escape(f.name), '</strong> (', f.type || 'n/a', ') - ',
                f.size, ' bytes, last modified: ',
                f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                '</li>');
  }
  get('file_list2').innerHTML = '<ul>' + output.join('') + '</ul>';
}

// Setup the dnd listeners.
get('drop_zone').addEventListener('dragover', example2.onDragOver, false);
get('drop_zone').addEventListener('drop', example2.onDragFileDrop, false);


var example3 = example3 || {};
example3.handleFileSelect = function(evt) {
  var files = evt.target.files; // FileList object.

  // Loop through the FileList and render image files as thumbnails.
  for (var i = 0, f; f = files[i]; i++) {

    // Only process image files.
    if (!f.type.match('image.*')) {
      continue;
    }

    var reader = new FileReader();

    // Need a closure to capture the file information.
    reader.onload = (function(theFile) {
      return function(e) {
        // Render thumbnail.
        var span = document.createElement('span');
        span.innerHTML = ['<img class="thumb" src="', e.target.result,
                          '" title="', escape(theFile.name), '"/>'].join('');
        get('thumbnails').insertBefore(span, null);
      };
    })(f);

    // Read in the image file as a data URL.
    reader.readAsDataURL(f);
  }
}
get('files3').addEventListener('change', example3.handleFileSelect, false);

var example4 = example4 || {};
example4.readBlob = function(opt_startByte, opt_stopByte) {
  var files = get('file4').files;
  if (!files.length) {
    alert('Please select a file!');
    return;
  }

  var file = files[0];
  var start = parseInt(opt_startByte) || 0;
  var stop = parseInt(opt_stopByte) || file.size - 1;

  var reader = new FileReader();

  reader.onloadend = function(evt) {
    if (evt.target.readyState == FileReader.DONE) { // DONE == 2
      get('byte_content').textContent = evt.target.result;
      get('byte_range').textContent = ['Read bytes: ', start + 1, ' - ', stop + 1,
                                       ' of ', file.size, ' byte file'].join('');
    }
  };
  //var blob = file.slice(start, (stop - start) + 1);
  if (file.webkitSlice) {
    var blob = file.webkitSlice(start, stop + 1);
  } else if (file.mozSlice) {
    var blob = file.mozSlice(start, stop + 1);
  }
  reader.readAsBinaryString(blob);
};
document.querySelector('.readBytesButtons').addEventListener('click', function(evt) {
  if (evt.target.tagName.toLowerCase() == 'button') {
    var startByte = evt.target.getAttribute('data-startbyte');
    var stopByte = evt.target.getAttribute('data-endbyte');
    example4.readBlob(startByte, stopByte);
  }
}, false);

function Example5(id) {
  var reader_;
  var progress_ = document.querySelector('.percent');
  var self = this;

  this.abortRead = function() {
    reader_.abort();
  };

  this.errorHandler = function(evt) {
    switch(evt.target.error.code) {
      case evt.target.error.NOT_FOUND_ERR:
        alert('File Not Found!');
        break;
      case evt.target.error.NOT_READABLE_ERR:
        alert('File is not readable');
        break;
      case evt.target.error.ABORT_ERR:
        break; // noop
      default:
        alert('An error occurred reading this file.');
    };
  };

  this.updateProgress = function(evt) {
    // evt is a ProgressEvent.
    if (evt.lengthComputable) {
      var percentLoaded = Math.round((evt.loaded / evt.total) * 100);
      // Increase the progress bar length.
      if (percentLoaded < 100) {
        progress_.style.width = percentLoaded + '%';
        progress_.textContent = percentLoaded + '%';
      }
    }
  };

  this.handleFileSelect = function(evt) {
    // Reset progress indicator on new file selection.
    progress_.style.width = '0%';
    progress_.textContent = '0%';

    reader_ = new FileReader();
    reader_.onerror = self.errorHandler;
    reader_.onprogress = self.updateProgress;
    reader_.onabort = function(e) {
      alert('File read cancelled');
    };
    reader_.onloadstart = function(e) {
      get('progress_bar').className = 'loading';
    };
    reader_.onload = function(e) {
      // Ensure that the progress bar displays 100% at the end.
      progress_.style.width = '100%';
      progress_.textContent = '100%';
      setTimeout("get('progress_bar').className='';", 2000);
    }

    // Read in the image file as binary string.
    reader_.readAsBinaryString(evt.target.files[0]);
  };

  get(id).addEventListener('change', self.handleFileSelect, false);
};
var example5 = new Example5('file5');
</script>


      </div>
    </section>
  </article>

  
  <section class="disqus pattern-bg-lighter">

    <div id="disqus" class="container">

      <h2>Comments</h2>

      <div id="disqus_thread">

        <a href="#disqus_thread" class="load-comments" data-disqus-identifier="https://www.html5rocks.com/tutorials/file/dndfiles/">12</a>

      </div>
    </div>

    <noscript>
      <p class="center">
        <strong>
          <a href="https://disqus.com/?ref_noscript">Debes habilitar JavaScript para ver los comentarios con la tecnología de Disqus.</a>
        </strong>
      </p>
    </noscript>

    <script>

      var disqus_shortname = 'html5rocks';
      var disqus_identifier = 'https://www.html5rocks.com/tutorials/file/dndfiles/';
      var disqus_url = 'https://www.html5rocks.com/tutorials/file/dndfiles/';
      var disqus_developer = 0;

      var disqus_config = function () {
        var funky_language_code_mapping = {
          'de': 'de_inf',
          'es': 'es_ES',
          'pt': 'pt_EU',
          'sr': 'sr_CYRL',
          'sv': 'sv_SE',
          'zh': 'zh_HANT'
        };
        this.language = funky_language_code_mapping['es'] ||
                        'es';

        this.callbacks.onReady = [ function () {
                                      try {
                                        ga('send', 'event', 'View comments');
                                      } catch(err){}
                                   } ];
        this.callbacks.onNewComment = [ function (comment) {
                                          try {
                                            ga('send', 'event', 'Commented');
                                          } catch(err){}
                                        } ];
      };

      window.addEventListener('load', function(e) {

        var c = document.createElement('script');
        c.type = 'text/javascript';
        c.src = 'https://' + disqus_shortname + '.disqus.com/count.js';
        c.async = true;

        var s = document.getElementsByTagName('script')[0], sp = s.parentNode;
        sp.insertBefore(c, s);

        if (window.location.hash === '#disqus_thread')
          loadComments();

      }, false);

      var disqus_loaded = false;
      function loadComments() {

        if (disqus_loaded)
          return;

        disqus_loaded = true;

        ga('send', 'event', 'Interactions', 'Comments', 'Comments Loaded');

        var s = document.getElementsByTagName('script')[0], sp = s.parentNode;
        var dsq = document.createElement('script');
        dsq.type = 'text/javascript';
        dsq.async = true;

        var disqusContainer = document.getElementById('disqus');
        disqusContainer.classList.add('active');

        dsq.src = 'https://' + disqus_shortname + '.disqus.com/embed.js';
        sp.insertBefore(dsq, s);
      }

      function outgoing(url) {
        try {
          ga('send', 'event', 'Outbound Links' , url);
        } catch(err){}
      }
      // Open external links (also that don't have a target defined) in a new tab.
      var externLinks = document.querySelectorAll('article.tutorial a[href^="http"]:not([target])');
      for(var i = 0, a; a = externLinks[i]; ++i) {
        a.target = '_blank';
        a.addEventListener('click', new Function('outgoing(' + '"' + a.href.replace(/.*?:\/\//g, "") + '"' + ');'));
      }

      var loadCommentsButtons = document.querySelectorAll('.load-comments');
      for(var l = 0; l < loadCommentsButtons.length; l++)
        loadCommentsButtons[l].addEventListener('click', loadComments);

    </script>
  </section>
  

  <footer>
    <div class="container">

      
        <h1>Next steps</h1>

        

        <aside class="panel share">
          <h2>Share</h2>
          <style>
            aside.share.native .android { display: inline-block !important;
            background-image: url(https://storage.googleapis.com/material-icons/external-assets/v4/icons/svg/ic_share_white_36px.svg) !important;
            background-size: 48px 48px !important;
             background-position: 0, 0 !important; }
          </style>
          <a href="https://twitter.com/share?url=https://www.html5rocks.com/tutorials/file/dndfiles/&amp;text=C%C3%B3mo%20leer%20archivos%20en%20JavaScript%20a%20trav%C3%A9s%20de%20las%20API%20de%20archivos&amp;lang=es&amp;via=ChromiumDev&amp;related=ChromiumDev" class="android" style="display: none;">Share</a>
          <a href="https://twitter.com/share?url=https://www.html5rocks.com/tutorials/file/dndfiles/&amp;text=C%C3%B3mo%20leer%20archivos%20en%20JavaScript%20a%20trav%C3%A9s%20de%20las%20API%20de%20archivos&amp;lang=es&amp;via=ChromiumDev&amp;related=ChromiumDev" class="twitter" target="_blank">Twitter</a>
          <a href="https://www.facebook.com/sharer/sharer.php?u=https://www.html5rocks.com/tutorials/file/dndfiles/" class="facebook" target="_blank">Facebook</a>
          <a href="https://plus.google.com/share?url=https://www.html5rocks.com/tutorials/file/dndfiles/" class="gplus" onclick="javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;">Google+</a>
        </aside>

        <aside class="panel rss">
          <h2>Subscribe</h2>
          <p>Enjoyed this article? Grab the <a href="http://feeds.feedburner.com/html5rocks">RSS feed</a> and stay up-to-date.</p>
        </aside>

      

      <p class="licensing">
      
        Except as otherwise <a href="http://code.google.com/policies.html#restrictions">noted</a>, the content of this page is licensed under the <a href="http://creativecommons.org/licenses/by/3.0/">Creative Commons Attribution 3.0 License</a>, and code samples are licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache 2.0 License</a>.
      
      </p>

    </div>
  </footer>

  <script>
    window.isCompatible = function() {
      
  return !!(window.File) && !!(window.FileReader) && !!(window.FileList) && !!(window.Blob);

    };
    
    if(navigator.share !== undefined) {
    document.addEventListener('DOMContentLoaded', e => {
      var shareBox = document.querySelector('aside.share');
      if(shareBox !== undefined) { shareBox.classList.toggle('native'); }
      
      var shareBtn = document.querySelector('aside.share a.android');
      shareBtn.addEventListener('click', clickEvent => {
        clickEvent.preventDefault();
        const title = "Cómo leer archivos en JavaScript a través de las API de archivos";
        const url = "https://www.html5rocks.com/tutorials/file/dndfiles/";
        navigator.share({title: title, text: url, url: url})
          .then(() => console.log('Successful share'),
           error => console.log('Error sharing:', error));
      });
    });
}

    if (isCompatible() === false) {
      document.getElementById('notcompatible').className = '';
    }

    function _prettyPrint() {
      if (typeof customPrettyPrintLanguage != 'undefined') {
        customPrettyPrintLanguage();
      }
      prettyPrint();
    }
  </script>
  <script async="" src="C%C3%B3mo%20leer%20archivos%20locales%20en%20JavaScript%20-%20HTML5%20Rocks_files/prettify.js" onload="_prettyPrint()"></script>
  <!-- Google Tag Manager -->
<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-XXXX"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-MB3LRF');</script>
<!-- End Google Tag Manager -->


  </div>

  <script>
  (function() {

    // Kill feedburner and marketing tracking arguments, but let them register
    // before we do it.
    setTimeout(function() {
      if (/^\?utm_/.test(document.location.search) &&
          window.history.replaceState) {
        window.history.replaceState(
            {}, '', document.location.href.replace(/\?utm_.*/, ''));
      }
    }, 2000);

    var siteHeader = document.getElementById('siteheader');
    var navToggle = document.getElementById('navtoggle');
    var siteNav = document.getElementById('sitenav');

    function toggle(target, forceActive) {

      if (typeof toc !== 'undefined') {
        // Switch off whichever one is not the
        // current target
        if (target === toc)
          siteNav.classList.remove('active');
        else
          toc.classList.remove('active');
      }

      // Toggle if no force parameter is set
      if (typeof forceActive === 'undefined') {
        target.classList.toggle('active');
      } else {
        if (forceActive)
          target.classList.add('active');
        else
          target.classList.remove('active');
      }

      // now find out what the set state ended up being
      var isActive = target.classList.contains('active');

      if (isActive)
        siteHeader.classList.add('expanded');
      else
        siteHeader.classList.remove('expanded');

    }

    navToggle.addEventListener('click', function(e) {
      toggle(siteNav);
      e.preventDefault();
    });

    

    var tocToggle = document.getElementById('toctoggle');
    var toc = document.getElementById('toc');
    var articleMeta = document.getElementById('article-meta');
    var articleContent = document.getElementById('article-content');
    var articleMetaHeight = 0;
    var articleMetaMaxY = 0;
    var articleMetaMinY = 0;
    var articleContentPadding = 200;

    var tocLinks = document.querySelectorAll('.toc a');
    for (var t = 0; t < tocLinks.length; t++)
      tocLinks[t].addEventListener('click', onTocLinkClick);

    tocToggle.addEventListener('click', function(e) {
      toggle(toc);
      e.preventDefault();
    });

    toc.addEventListener('click', function(e) {
      if (e.target !== siteNav)
        toggle(toc, false);
    });

    function onTocLinkClick() {
      ga('send', 'event', 'Interactions', 'TOC', 'TOC Clicked');
    }

    function setMinScrollYFromMetaY() {
      var scrollPosition = window.scrollY;

      var articleMetaBounds = articleMeta.getBoundingClientRect();
      var articleMetaTop = Math.max(352,
          articleMetaBounds.top - 20 + scrollPosition);

      articleMetaHeight = articleMetaBounds.bottom - articleMetaBounds.top;
      articleMetaMinY = articleMetaTop;
    }

    function setMaxScrollYFromContentHeight() {

      var scrollPosition = window.scrollY;

      var articleContentBounds = articleContent.getBoundingClientRect();
      var articleContentTop = articleContentBounds.top + scrollPosition;
      var articleContentHeight = articleContentBounds.bottom - articleContentBounds.top;

      articleMetaMaxY = articleContentTop +
          articleContentHeight -
          articleMetaHeight -
          articleContentPadding;

    }

    function onScroll(e) {

      if (window.scrollY >= articleMetaMinY) {

        articleMeta.classList.add('sticky');

        var articleMetaTop = 22 - Math.max(0, window.scrollY - articleMetaMaxY);
        articleMeta.style.top = articleMetaTop + 'px';

      } else {
        articleMeta.classList.remove('sticky');
        articleMeta.style.top = 'auto';
      }
    }

    if (articleMeta.getBoundingClientRect) {
      setMinScrollYFromMetaY();
      setMaxScrollYFromContentHeight();
      document.addEventListener('scroll', onScroll);
      window.addEventListener('load', setMaxScrollYFromContentHeight, false);
    }

    
  })();
  </script>
  <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-15028909-1', 'auto');
  ga('create', 'UA-49880327-4', 'auto', {'name': 'html5rocks'});

  ga('send', 'pageview');
  ga('html5rocks.send', 'pageview');

  </script>
   <!-- Google Tag Manager -->
<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-XXXX"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-MB3LRF');</script>
<!-- End Google Tag Manager -->


</body></html>